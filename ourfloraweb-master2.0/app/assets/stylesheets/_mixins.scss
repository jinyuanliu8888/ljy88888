// Project specific variables
$menu-width: 300px;
$button-width: 170px;
$button-colour: #2c3e50;
$button-colour-lighter: #506e8d;
$menu-colour: #2c3e50;

/* Breakpoints
...................................................................................... */

@mixin mediaBreakpoint($point) {
  @if $point == 'large' {
    @media (min-width: 960px) { @content; }
  }
  @if $point == 'medium' {
    @media (min-width: 768px) and (max-width: 1023px) { @content; }
  }
  @if $point == 'small' {
    @media (min-width: 480px) and (max-width: 767px)  { @content; }
  }
  @else if $point == 'mobile' {
    @media only screen and  (max-width: 479px)  { @content; }
  }
}

/* Helpers
...................................................................................... */

@mixin fontWeight($weight) {
  @if $weight == 'light' {
    font-weight: 300;
  }
  @if $weight == 'normal' {
    font-weight: 400;
  }
  @if $weight == 'bold' {
    font-weight: 700;
  }
}

@mixin roundCornerAll($radius) {
  @include roundCorner($radius, $radius, $radius, $radius);
}

@mixin roundCorner($top, $right, $bottom, $left) {
  -moz-border-radius: $top $right $bottom $left;
  -webkit-border-radius: $top $right $bottom $left;
  -khtml-border-radius: $top $right $bottom $left;
  border-radius: $top $right $bottom $left;
}

@mixin verticalAlign($where: middle) {
  vertical-align: $where;
  display:inline-block;
}

@mixin opacity($value) {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $value*100 + ")"; // IE 8
  filter: alpha(opacity=$value*100); // IE 5-7
  -moz-opacity: $value; // Netscape
  -khtml-opacity: $value; // Safari 1.x
  opacity: $value;
}

@mixin backgroundHover($backgroundColor, $percentage:5%) {
  background-color: $backgroundColor;

  &:hover {
    background-color: darken($backgroundColor, $percentage);
  }
}

@mixin backgroundClick($backgroundColor, $percentage:10%) {
  background-color: $backgroundColor;

  &:active {
    background-color: darken($backgroundColor, $percentage);
  }
}

@mixin foregroundHover($foregroundColor, $percentage:5%) {
  color: $foregroundColor;

  &:hover {
    color: darken($foregroundColor, $percentage);
  }
}

@mixin foregroundClick($foregroundColor, $percentage:10%) {
  color: $foregroundColor;

  &:active {
    color: darken($foregroundColor, $percentage);
  }
}

@mixin fullTransition($timer) {
  -webkit-transition: all $timer ease;
    -moz-transition: all $timer ease;
      -ms-transition: all $timer ease;
        -o-transition: all $timer ease;
          transition: all $timer ease;
}

@mixin selectTransition($values...) {
  -webkit-transition: $values;
    -moz-transition: $values;
      -ms-transition: $values;
        -o-transition: $values;
          transition: $values;
}

@mixin noTransition() {
  -webkit-transition: none;
    -moz-transition: none;
      -ms-transition: none;
        -o-transition: none;
          transition: none;
}

@mixin unselectable() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin removeInputGlow() {
  &:focus {
    outline-color: transparent;
    outline-style: none;
  }
}

@mixin grabbable() {
  cursor: move; // Fallback incase grab isn't supported
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;

  &:active, &.active { // Make the cursor actually "grab" on click - The :active psuedoselector is sometimes screwed in firefox, just apply a class using js to active this
    cursor: grabbing;
    cursor: -moz-grabbing;
    cursor: -webkit-grabbing;
  }
}

/* Classes
...................................................................................... */

.height-fix {
  vertical-align: middle;
  height: 100%;
  width:0;
  display: inline-block;
  overflow:hidden;
}

.highlight {
  color: lighten($button-colour, 20%);
}

.inline-middle {
  display:inline-block;
  vertical-align: middle;
}

/* Normalize
...................................................................................... */

figure {
  margin: 0 !important;
}